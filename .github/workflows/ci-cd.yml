name: CI/CD Pipeline

# Deployment timestamp: 2024-03-14
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Build and test backend
      run: |
        cd backend
        mvn clean package -f src/main/pom.xml
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install and build frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: Check Docker files exist
      run: |
        if [ ! -f "backend/DockerFile" ]; then
          echo "backend/DockerFile is missing"
          exit 1
        fi
        if [ ! -f "frontend/DockerFile" ]; then
          echo "frontend/DockerFile is missing"
          exit 1
        fi
        
    - name: Set up Docker Buildx
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        
    - name: Build and push Backend Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/DockerFile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/archivage-doc-backend:latest
        
    - name: Build and push Frontend Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/DockerFile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/archivage-doc-frontend:latest 